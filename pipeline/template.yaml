AWSTemplateFormatVersion: 2010-09-09
Description: Up services bff to application

Parameters:
  ServiceName: 
    Type: String
    Default: service-podfy-bff
  LambdaAuthorizeName:
    Type: String
    Default: service-podfy-user-application-validate-token
  LambdaValidateTokenRoleName:
    Type: String
    Default: LambdaValidateTokenRole
  MediaCounterURL:
    Type: String
    Default: https://d7ynlgznbi.execute-api.us-east-1.amazonaws.com/Prod
  UserURL:
    Type: String
    Default: https://fe8vz0k2fh.execute-api.us-east-1.amazonaws.com/Prod
Resources:
  # -------------------------------------------------------------------------
  # Deploy API GW HTTP API route with autorize
  # -------------------------------------------------------------------------

  APIGWTRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${ServiceName}-api-gtw"
      EndpointConfiguration:
        Types:
          - EDGE
      Parameters:
        endpointConfigurationTypes: EDGE

# -------------------------------------------------------------------------
# Deploy method to User
# -------------------------------------------------------------------------

  APIGWTUserResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ParentId: !GetAtt
        - APIGWTRestApi
        - RootResourceId
      PathPart: "user"

  APIGWTUserSingInResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ParentId: !GetAtt
        - APIGWTUserResource
        - RootResourceId
      PathPart: "sing-in"

  APIGWTUserSingUpResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ParentId: !GetAtt
        - APIGWTUserResource
        - RootResourceId
      PathPart: "sing-up"

  APIGWTuserSingInPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ResourceId: !Ref APIGWTUserSingInResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: !Ref UserURL

  APIGWTUserSingUpGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ResourceId: !Ref APIGWTUserSingUpResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: !Ref UserURL

# -------------------------------------------------------------------------
# Deploy method to Media counter
# -------------------------------------------------------------------------
  APIGWTProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ParentId: !GetAtt
        - APIGWTRestApi
        - RootResourceId
      PathPart: "media-counter"

  APIGWTMediaCounterPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ResourceId: !Ref APIGWTProxyResource
      HttpMethod: POST
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      RequestParameters:
        method.request.header.Authorization: true
      Integration:
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: !Ref MediaCounterURL

  APIGWTMediaCounterGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref APIGWTRestApi
      ResourceId: !Ref APIGWTProxyResource
      HttpMethod: GET
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref Authorizer
      RequestParameters:
        method.request.header.Authorization: true
        method.request.querystring.Key: true
      Integration:
        RequestParameters:
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.querystring.Key: method.request.querystring.Key
        IntegrationHttpMethod: GET
        Type: HTTP_PROXY
        Uri: !Ref MediaCounterURL

  Authorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: "300"
      AuthorizerCredentials: !Sub "arn:aws:iam::${AWS::AccountId}:role/${LambdaValidateTokenRoleName}"
      AuthorizerUri: !Join
        - ""
        - - "arn:aws:apigateway:"
          - !Ref AWS::Region
          - ":lambda:path/2015-03-31/functions/"
          - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaAuthorizeName}"
          - /invocations
      Type: REQUEST
      IdentitySource: method.request.header.Authorization
      Name: DefaultAuthorizer
      RestApiId: !Ref APIGWTRestApi

  APIGWTDeployment:
    DependsOn: 
       - APIGWTMediaCounterPostMethod
       - APIGWTMediaCounterGetMethod
       - APIGWTuserSingInPostMethod
       - APIGWTUserSingUpGetMethod
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref APIGWTRestApi
      Description: Deploymento to api gtw
      StageName: dev
